@model AutoRSN.Models.ItemNotes

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- -------------- Topbar -------------- -->
<header id="topbar" class="alt">
    <div class="topbar-left">
        <ol class="breadcrumb">
            <li class="breadcrumb-icon">
                <a href="#">
                    <span class="fa fa-home"></span>
                </a>
            </li>
            <li class="breadcrumb-active">
                <a href="#">Master Setup</a>
            </li>
            <li class="breadcrumb-link">
                <a href="#">HOME</a>
            </li>
            <li class="breadcrumb-current-item">ITEM NOTES EDIT</li>
        </ol>
    </div>
    <div class="topbar-right">
        <div class="ib topbar-dropdown">

        </div>
    </div>
</header>

<!-- -------------- Content -------------- -->
<section id="content" class="table-layout animated fadeIn">
@try
{
    if (Session["Level"].ToString().Equals("1"))
    {

    }

    <div class="pl15 pr50">
        @if (TempData["Message"] != null)
            {
            <div class="alert alert-danger" style="float: none;" role="alert">
                <b>@TempData["Message"]</b>
            </div>
        }
        @using (Html.BeginForm("Edit", "ItemNotes", FormMethod.Post, new { @class = "form-horizontal" }))
        {
            @Html.ValidationSummary(true)
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.CUSTOMERPO)
            @Html.HiddenFor(model => model.SALESORDER)
            @Html.HiddenFor(model => model.SERVERID)

            <div class="alert alert-danger dark alert-dismissable" style="display:@(this.ViewData.ModelState.IsValid ? "none" : "")">
                @Html.ValidationSummary()
            </div>

            <div class="form-group">
                <label class="col-lg-3 control-label">SALES ORDER # :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextBoxFor(model => model.SALESORDER, new { @class = "form-control", @readonly = "readonly" })</p>
                </div>
            </div>
            <div class="form-group">
                <label class="col-lg-3 control-label">SO LINE # :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextBoxFor(model => model.SOLINE, new { @class = "form-control"})</p>
                </div>
            </div>
            <div class="form-group">
                <label class="col-lg-3 control-label">REASON :</label>
                <div class="col-lg-8">
                    @{ 
                        List<SelectListItem> reasonList = new List<SelectListItem>();
                        List<AutoRSN.Models.Reason> ListReason = new List<AutoRSN.Models.Reason>();
                        ListReason = new List<AutoRSN.Models.Reason>() { new AutoRSN.Models.Reason { REASONID = 0, REASON = "-- PLEASE SELECT REASON --" } };
                        AutoRSN.Repositories.ReasonRepository rr = new AutoRSN.Repositories.ReasonRepository();

                        foreach (var item in rr.GetReason(Convert.ToInt32(Session["ServerId"].ToString().ToUpper()), true))
                        {
                            AutoRSN.Models.Reason reason = new AutoRSN.Models.Reason();
                            reason.REASONID = item.REASONID;
                            reason.REASON = item.REASON;
                            ListReason.Add(reason);

                            reasonList.Add(new SelectListItem { Text = item.REASON, Selected = false, Value = Convert.ToString(item.REASONID) });

                        }

                    }
                    <p class="form-control-static"> @Html.DropDownListFor(m => m.REASONID, reasonList, new { @class = "form-control" })</p>
                </div>
            </div>
            <div class="form-group">
                <label class="col-lg-3 control-label">STATUS :</label>
                <div class="col-lg-8">
                    @{ 
                        List<SelectListItem> statusList = new List<SelectListItem>()
                {
                new SelectListItem{ Text="-- PLEASE SELECT STATUS --" , Selected = true, Value =""  },
                new SelectListItem { Text="BLOCK" , Selected =false, Value ="N"  },
                new SelectListItem { Text="UNBLOCK" , Selected =false, Value ="Y"  }
                };

                    }
                    <p class="form-control-static"> @Html.DropDownListFor(m => m.STATUS, statusList, new { @class = "form-control" })</p>
                 
                </div>
            </div>
            <div class="form-group">
                <label class="col-lg-3 control-label">REMARK :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextAreaFor(model => model.REMARK, new { @class = "form-control" })</p>
                </div>
            </div>

            <div class="form-group">
                <label class="col-lg-3 control-label"></label>
                <div class="col-lg-8">
                    <p class="form-control-static text-muted"></p>
                </div>
            </div>

            <div class="form-group">
                <label class="col-lg-3 control-label"></label>
                <div class="col-lg-8">
                    <input type="submit" class="btn btn-bordered btn-success w150" value="Update" />
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-bordered btn-dark w150" })
                </div>
            </div>

        }
    </div>

                        }
                        catch (Exception ex)
                        {
                            <script type="text/javascript">
                                alert('@ex.Message.Replace("'","\\'").Replace("\r\n","<br/>")' + '\n' + 'Session Timeout');
                                location.href = '/AutoRSN';
                                //alert('Session Timeout');
                            </script>
                        }
    <!-- -------------- /Column Center -------------- -->
</section>
