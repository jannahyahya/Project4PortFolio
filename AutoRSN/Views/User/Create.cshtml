@model AutoRSN.Models.User

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- -------------- Topbar -------------- -->

<header id="topbar" class="alt">
    <div class="topbar-left">
        <ol class="breadcrumb">
            <li class="breadcrumb-icon">
                <a href="#">
                    <span class="fa fa-home"></span>
                </a>
            </li>
            <li class="breadcrumb-active">
                <a href="#">Master Setup</a>
            </li>
            <li class="breadcrumb-link">
                <a href="#">HOME</a>
            </li>
            <li class="breadcrumb-current-item">USER CREATE</li>
        </ol>
    </div>
    <div class="topbar-right">
        <div class="ib topbar-dropdown">

        </div>
    </div>
</header>

<!-- -------------- Content -------------- -->
<section id="content" class="table-layout animated fadeIn">
    <div class="pl15 pr50">
    @if (TempData["Message"] != null)
            {
        <div class="alert alert-danger" style="float: none;" role="alert">
            <b>@TempData["Message"]</b>
        </div>
    }
    @using (Html.BeginForm("Create", "User", FormMethod.Post, new { @class = "form-horizontal", @enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(true)
        @Html.AntiForgeryToken()

        <div class="alert alert-danger dark alert-dismissable" style="display:@(this.ViewData.ModelState.IsValid ? "none" : "")">
            @Html.ValidationSummary()
        </div>

        <div class="form-group">
            <label class="col-lg-3 control-label">FULL NAME:</label>
            <div class="col-lg-8">
                <p class="form-control-static"> @Html.TextBoxFor(model => model.FULLNAME, new { @class = "form-control" })</p>
            </div>
        </div>


            <div class="form-group">
                <label class="col-lg-3 control-label">WINDOWS ID :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextBoxFor(model => model.USERNAME, new { @class = "form-control" })</p>
                </div>
            </div>


            <div class="form-group">
                <label class="col-lg-3 control-label">EMAIL :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextBoxFor(model => model.EMAIL, new { @class = "form-control" })</p>
                </div>
            </div>
            <div class="form-group">
                <label class="col-lg-3 control-label">LEVEL :</label>
                <div class="col-lg-8">
                    @{

                        List<SelectListItem> listItems = new List<SelectListItem>();
                        listItems.Add(new SelectListItem
                        {
                            Text = "0-ADMIN",
                            Value = "0"

                        });

                        listItems.Add(new SelectListItem
                        {
                            Text = "1-USER",
                            Value = "1",
                            Selected = true
                        });

                    }
                    <p class="form-control-static"> @Html.DropDownListFor(model => model.LVL, listItems, "-- Select User Level --")</p>
                </div>
            </div>
            <div class="form-group">
                <label class="col-lg-3 control-label">CUSTOMER GROUP:</label>
                <div class="col-lg-8">

                    <table border="1">
                        @{

                            //List<SelectListItem> listCust = new List<SelectListItem>();
                            List<SelectListItem> listCust = new List<SelectListItem>();
                            for (int i = 0; i < Model.CUSTOMERGROUP.Length; i++)
                            {
                                
                                @Html.HiddenFor(model => model.PermissionHolderList) //for customergroup value
                                //@Html.HiddenFor(model => Model.PermissionHolderList[i]
                                listCust.Add(new SelectListItem
                                {
                                    Text = Model.CUSTOMERGROUP[i],
                                    Value = Model.CUSTOMERGROUP[i]

                                });


                                //counter++;
                            }
                            for (int i = 0; i < Model.CUSTOMERGROUP.Length; i++) //list for all customer
                            {
                               // @Html.HiddenFor(model => model.PermissionHolderList[i].Permission) //for permission value
                                List<SelectListItem> listCustPermission = new List<SelectListItem>();
                                listCustPermission.Add(new SelectListItem
                                {
                                    Text = "Display",
                                    Value = "Display"

                                });
                                listCustPermission.Add(new SelectListItem
                                {
                                    Text = "Edit",
                                    Value = "Edit"

                                });

                             <tr style="margin:10%">
                                <td>
                                    <p class="form-control-static"> @Html.DropDownListFor(model => model.CUSTOMERGROUP[i], listCust, "-- Choose Customer Group --")</p>

                                </td>

                                <td>
                                    <p class="form-control-static"> @Html.DropDownListFor(model => model.PERMISSION[i], listCustPermission, "-- Choose permission --")</p>

                                </td>

                              </tr>
                             }


                            }


                    </table>

                </div>
            </div>

            <div class="form-group">
                <label class="col-lg-3 control-label">DEPARTMENT :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextAreaFor(model => model.DEPT, new { @class = "form-control" })</p>
                </div>
            </div>

            <!--
            <div class="form-group">
                <label class="col-lg-3 control-label"> SIGNATURE (IMAGE) : </label>
                <div class="col-lg-8">
                    <p class="form-control-static"> <input type="file" name="ImageData" id="ImageData" onchange="fileCheck(this);" /> </p>
                </div>
            </div>-->


                            List<SelectListItem> listUser = new List<SelectListItem>();
                            AutoRSN.Repositories.UserRepository usr = new AutoRSN.Repositories.UserRepository();
                            IEnumerable<AutoRSN.Models.User> userList = usr.GetUserBySearch(Convert.ToInt32(Session["ServerId"].ToString().ToUpper()), null);
                            List<SelectListItem> userControlLst = new List<SelectListItem>();
                            foreach (AutoRSN.Models.User user in userList)
                            {

                                //if(!Session["UserId"].ToString().Equals(user.USERNAME.ToUpper()))
                                //{
                                userControlLst.Add(new SelectListItem
                                {
                                    Text = user.USERNAME,
                                    Value = user.USERNAME

                                });

                                // }

                            }


                <div class="form-group">
                    <label class="col-lg-3 control-label"> SUPERVISOR : </label>
                        <div class="col-lg-8">
                            <p class="form-control-static"> @Html.DropDownListFor(model => model.SUPERVISOR, userControlLst, "-- Choose Supervisor--") </p>
                        </div>
                </div>

                <div class="form-group">
                    <label class="col-lg-3 control-label">STATUS :</label>
                    <div class="col-lg-8">
                        <p class="form-control-static"> @Html.DropDownListFor(model => model.STATUS, new SelectList(Model.ListOfStatus, "Value", "Text"), new { @class = "form-control" })</p>
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-lg-3 control-label"></label>
                    <div class="col-lg-8">
                        <p class="form-control-static text-muted"></p>
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-lg-3 control-label"></label>
                    <div class="col-lg-8">
                        <input type="submit" class="btn btn-bordered btn-success w150" value="Save" />
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-bordered btn-dark w150" })
                    </div>
                </div>

                }
    </div>
    <!-- -------------- /Column Center -------------- -->
</section>
