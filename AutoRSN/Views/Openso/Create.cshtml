@model AutoRSN.Models.Openso

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- -------------- Topbar -------------- -->
<header id="topbar" class="alt">
    <div class="topbar-left">
        <ol class="breadcrumb">
            <li class="breadcrumb-icon">
                <a href="#">
                    <span class="fa fa-home"></span>
                </a>

            </li>
            <li class="breadcrumb-active">
                <a href="#">Master Setup</a>
            </li>
            <li class="breadcrumb-link">
                <a href="#">HOME</a>
            </li>
            <li class="breadcrumb-current-item">RSN CREATE</li>
        </ol>
    </div>
    <div class="topbar-right">
        <div class="ib topbar-dropdown">

        </div>
    </div>
</header>

<!-- -------------- Content -------------- -->
<section id="content" class="table-layout animated fadeIn">
    <style>
    input[type=number]::-webkit-inner-spin-button, 
    input[type=number]::-webkit-outer-spin-button { 
    -webkit-appearance: none; 
     margin: 0; 
        }


    </style>
    <link href="http://ajax.googleapis.com/ajax/libs/jqueryui/1/themes/black-tie/jquery-ui.css" type="text/css" rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-1.11.3.min.js"></script>
    <script src="https://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <script>
        $(function () { // will trigger when the document is ready
            
            $('.datepicker').datepicker(); //Initialise any date pickers
        });

    </script>
@try
{
    if (Session["Level"].ToString().Equals("1"))
    {

    }

    <div class="pl15 pr50">
        @if (TempData["Message"] != null)
            {
            <div class="alert alert-danger" style="float: none;" role="alert">
                <b>@TempData["Message"]</b>
            </div>
        }
        @using (Html.BeginForm("Create", "Openso", FormMethod.Post, new { @class = "form-horizontal" }))
        {
            @Html.ValidationSummary(true)
            @Html.AntiForgeryToken()

            <div class="alert alert-danger dark alert-dismissable" style="display:@(this.ViewData.ModelState.IsValid ? "none" : "")">
                @Html.ValidationSummary()
            </div>
            <div class="form-group">
                <label class="col-lg-3 control-label">SO # :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextBoxFor(model => model.VBELN, new { @class = "form-control", @id = "soNum" })</p>
                </div>
            </div>

            <div class="form-group">
                <label class="col-lg-3 control-label">SO Line# :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextBoxFor(model => model.POSNR, new { @class = "form-control" ,@id="lineItem"})</p>
                </div>
            </div>

            <!--
            <div class="form-group">
                <label class="col-lg-3 control-label"></label>
                <div class="col-lg-8">
                   
                    //Html.ActionLink("Find Record", "Populate", "Openso", null, new { onclick = "this.href += '?VBELN=' + document.getElementById('soNum').value + '&POSNR=' + document.getElementById('lineItem').value;" })
                
                </div>
            </div>
                -->


            <div class="form-group">
                <label class="col-lg-3 control-label">Customer Code :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextBoxFor(model => model.KUNNR1, new { @class = "form-control" })</p>
                </div>
            </div>

            <div class="form-group">
                <label class="col-lg-3 control-label">SHIP TO PARTY :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextBoxFor(model => model.KUNNR2, new { @class = "form-control" })</p>
                </div>
            </div>

            <div class="form-group">
                <label class="col-lg-3 control-label">Celestica Part # :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextBoxFor(model => model.MATNR, new { @class = "form-control" })</p>
                </div>
            </div>

            <div class="form-group">
                <label class="col-lg-3 control-label">Customer Part # :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextBoxFor(model => model.KDMAT, new { @class = "form-control" })</p>
                </div>
            </div>

            <div class="form-group">
                <label class="col-lg-3 control-label">Storage Location # :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextBoxFor(model => model.STORAGELOC, new { @class = "form-control", placeholder = "eg: 1000" })</p>
                </div>
            </div>

            <div class="form-group">
                <label class="col-lg-3 control-label">DESCRIPTION :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextBoxFor(model => model.ARKTX, new { @class = "form-control" })</p>
                </div>
            </div>


            <div class="form-group">
                <label class="col-lg-3 control-label">PO # :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextBoxFor(model => model.BSTNK, new { @class = "form-control" })</p>
                </div>
            </div>

            <div class="form-group">
                <label class="col-lg-3 control-label">PO Line# :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextBoxFor(model => model.POSEX, new { @class = "form-control" })</p>
                </div>
            </div>

            <div class="form-group">
                <label class="col-lg-3 control-label">SO TYPE :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextBoxFor(model => model.AUART, new { @class = "form-control" })</p>
                </div>
            </div>


            <div class="form-group">
                <label class="col-lg-3 control-label">Country Of Origin:</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextBoxFor(model => model.CCO, new { @class = "form-control" })</p>
                </div>
            </div>

            <div class="form-group">
                <label class="col-lg-3 control-label">Delivery Date (MM/dd/yyyy) :</label>
                <div class="col-lg-8">
                    <p class="form-control-static">
                    @Html.TextBoxFor(model => model.EDATU, new { @class = "form-control datepicker", placeholder = "Enter Drop-off date here..." })
                    @Html.ValidationMessageFor(model => model.EDATU)</p>
                </div>
            </div>


            <div class="form-group">
                <label class="col-lg-3 control-label">Remark :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextAreaFor(model => model.REMARKS, new { @class = "form-control" })</p>
                </div>
            </div>
            <div class="form-group">
                <label class="col-lg-3 control-label">QUANTITY :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextBoxFor(model => model.SHIPQTY, new { @type = "number", @class = "form-control" })</p>
                </div>
            </div>

            <div class="form-group">
                <label class="col-lg-3 control-label">CURRENCY :</label>
                <div class="col-lg-8">
                    @{ 
                        SelectList currency = new SelectList(new List<SelectListItem> {
                            new SelectListItem { Text="USD", Value = "USD" , Selected=true},
                             new SelectListItem { Text="MYR", Value = "MYR"}
                        }, "Value", "Text");

                    }

                    <p class="form-control-static"> @Html.DropDownListFor(model => model.CURRENCY, currency ,new { @class = "form-control" })</p>
                </div>
            </div>



            <div class="form-group">
                <label class="col-lg-3 control-label">PRICE PER UNIT :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextBoxFor(model => model.NETPR, new { @type = "number", @step = "0.01", @class = "form-control" })</p>
                </div>
            </div>

            <div class="form-group">
                <label class="col-lg-3 control-label">STATUS :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.DropDownListFor(model => model.STATUS, new SelectList(Model.ListOfStatus, "Value", "Text"), new { @class = "form-control" })</p>
                </div>
            </div>

            <div class="form-group">
                <label class="col-lg-3 control-label"></label>
                <div class="col-lg-8">
                    <p class="form-control-static text-muted"></p>
                </div>
            </div>

            <div class="form-group">
                <label class="col-lg-3 control-label"></label>
                <div class="col-lg-8">
                    <input type="submit" class="btn btn-bordered btn-success w150" value="Save" />
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-bordered btn-dark w150" })
                </div>
            </div>

        }
    </div>

    }
    catch (Exception ex)
    {
        <script type="text/javascript">
                                    alert('@ex.Message.Replace("'","\\'").Replace("\r\n","<br/>")' + '\n' + 'Session Timeout');
                                    location.href = '/AutoRSN';
                                    //alert('Session Timeout');
        </script>
    }


    <!-- -------------- /Column Center -------------- -->
</section>
