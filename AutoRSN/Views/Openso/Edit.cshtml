@model AutoRSN.Models.Openso


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- -------------- Topbar -------------- -->
<header id="topbar" class="alt">
    <div class="topbar-left">
        <ol class="breadcrumb">
            <li class="breadcrumb-icon">
                <a href="#">
                    <span class="fa fa-home"></span>
                </a>
            </li>
            <li class="breadcrumb-active">
                <a href="#">Master Setup</a>
            </li>
            <li class="breadcrumb-link">
                <a href="#">HOME</a>
            </li>
            <li class="breadcrumb-current-item">RSN EDIT</li>
        </ol>
    </div>
    <div class="topbar-right">
        <div class="ib topbar-dropdown">

        </div>
    </div>
</header>

<!-- -------------- Content -------------- -->
<section id="content" class="table-layout animated fadeIn">
@try
{
    if (Session["Level"].ToString().Equals("1"))
    {

    }
    <div class="pl15 pr50">
        @if (TempData["Message"] != null)
            {
            <div class="alert alert-danger" style="float: none;" role="alert">
                <b>@TempData["Message"]</b>
            </div>
        }
        @using (Html.BeginForm("Edit", "Openso", FormMethod.Post, new { @class = "form-horizontal" }))
        {
            @Html.ValidationSummary(true)
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.MATNR)
            @Html.HiddenFor(model => model.RSNNO)
            @Html.HiddenFor(model => model.SERVERID)

          
            <div class="alert alert-danger dark alert-dismissable" style="display:@(this.ViewData.ModelState.IsValid ? "none" : "")">
                @Html.ValidationSummary()
            </div>
            <div class="form-group">
                <label class="col-lg-3 control-label">RSN # :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextBoxFor(model => model.RSNNO, new { @class = "form-control", @readonly = "readonly" })</p>
                </div>

            </div>
            <div class="form-group">
                <label class="col-lg-3 control-label">Customer Name :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextBoxFor(model => model.KUNNR1, new { @class = "form-control" })</p>
                </div>
            </div>
            <div class="form-group">
                <label class="col-lg-3 control-label">Cls Part # :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextAreaFor(model => model.MATNR, new { @class = "form-control" })</p>
                </div>
            </div>
            <div class="form-group">
                <label class="col-lg-3 control-label">PO # :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextAreaFor(model => model.BSTNK, new { @class = "form-control" })</p>
                </div>
            </div>
            <div class="form-group">
                <label class="col-lg-3 control-label">Sales Order :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextAreaFor(model => model.VBELN, new { @class = "form-control" })</p>
                </div>
            </div>
            <div class="form-group">
                <label class="col-lg-3 control-label">Delivery Date:</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextAreaFor(model => model.EDATU, new { @class = "form-control" })</p>
                </div>
            </div>
     
                
            <div class="form-group">
                <label class="col-lg-3 control-label">Remark :</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextAreaFor(model => model.REMARKS, new { @class = "form-control" })</p>
                </div>
            </div>
                
            <div class="form-group">
                <label class="col-lg-3 control-label">Shipment: </label>
                <div class="col-lg-8">
                    @{
                        if (Convert.ToInt32(Model.SHIPQTY) ==  Convert.ToInt32(Model.OPENQTY))
                        {
       
                            <p class="form-control-static"> <input class="form-control" type="text" readonly="1" value="FULL"/> </p>
                        }
                         else if (Convert.ToInt32(Model.SHIPQTY) < Convert.ToInt32(Model.OPENQTY))
                        {
                            <p class="form-control-static"> <input class="form-control" type="text" readonly="1" value="PARTIAL" /> </p>

                        }
                        else if (Convert.ToInt32(Model.SHIPQTY) == 0)
                        {
                            <p class="form-control-static"> <input class="form-control" type="text" readonly="1" value="PARTIAL" /> </p>

                        }



                    }
                 
                </div>
            </div>

            <div class="form-group">
                <label class="col-lg-3 control-label">STATUS :</label>
                <div class="col-lg-8">
                   
                    @{
                        System.Diagnostics.Debug.WriteLine("model status== " + Model.STATUS);
                        List<SelectListItem> listItems = new List<SelectListItem>();
                        listItems.Add(new SelectListItem
                        {
                            Text = "ACTIVE",
                            Value = "Y"
                        });
                        listItems.Add(new SelectListItem
                        {
                            Text = "INACTIVE",
                            Value = "N",
                            Selected = true
                        });

                         <p class="form-control-static">

                             @if (Model.STATUS.Equals("Y"))
                             {
                                @Html.TextBox("ACTIVE", "ACTIVE", new { @readonly = '1', @class = "form-control" })

                             }
                             else
                             {
                               @Html.TextBox("BLOCK", "BLOCK", new { @readonly = '1', @class = "form-control" })
                             }



                             @Html.TextBoxFor(model => model.STATUS, new { @readonly = '1', @style = "display:none", @class = "form-control" })
                        </p>




                        // <p class="form-control-static">
                        //   @Html.DropDownListFor(model => model.STATUS, new SelectList(Model.ListOfStatus,
                        //  "Value", "Text"), new { @class = "form-control" })
                        // </p>
                    }
                         
                </div>
            </div>

            <div class="form-group">
                <label class="col-lg-3 control-label"></label>
                <div class="col-lg-8">
                    <p class="form-control-static text-muted"></p>
                </div>
            </div>

            <div class="form-group" style="display:none;" >
                <label class="col-lg-3 control-label">uniqel:</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextAreaFor(model => model.UNIQEL, new { @class = "form-control" })</p>
                </div>
            </div>

            <div class="form-group" style="display:none;">
                <label class="col-lg-3 control-label">Ship total stock:</label>
                <div class="col-lg-8">
                    <p class="form-control-static"> @Html.TextAreaFor(model => model.TOTALSTOCK, new { @class = "form-control" })</p>
                </div>
            </div>


            <div class="form-group">
                <label class="col-lg-3 control-label"></label>
                <div class="col-lg-8">
                    <input type="submit" class="btn btn-bordered btn-success w150" value="Update" />
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-bordered btn-dark w150" })
                </div>
            </div>

        }
    </div>
                        }
                        catch (Exception ex)
                        {
                            <script type="text/javascript">
                                alert('@ex.Message.Replace("'","\\'").Replace("\r\n","<br/>")' + '\n' + 'Session Timeout');
                                location.href = '/AutoRSN';
                                //alert('Session Timeout');
                            </script>
                        }
    
    <!-- -------------- /Column Center -------------- -->
</section>